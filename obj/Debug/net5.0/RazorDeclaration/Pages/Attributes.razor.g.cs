// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FaceMapper.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using FaceMapper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Development\Self Dev\FaceMapper\_Imports.razor"
using FaceMapper.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Development\Self Dev\FaceMapper\Pages\Attributes.razor"
using System.Text;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Development\Self Dev\FaceMapper\Pages\Attributes.razor"
using System.Net.Mime;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Development\Self Dev\FaceMapper\Pages\Attributes.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/attributes")]
    public partial class Attributes : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 38 "C:\Development\Self Dev\FaceMapper\Pages\Attributes.razor"
       
    private readonly string _baseUrl = "https://facemapper.cognitiveservices.azure.com";
    private string ImageUrl { get; set; }
    private List<Face> _faces;
    private Face[] _tempFaces;
    private Dictionary<string, float> _emotions;

    [Inject]
    private AppConfiguration _config { get; set; }

    public class DataPayload
    {
        public string Url { get; set; }
    }

    public class FaceAttribute
    {
        public float Age { get; set; }
        public string Gender { get; set; }
        public string Glasses { get; set; }
        public Emotion Emotion { get; set; }
    }

    public class Emotion
    {
        public float Anger { get; set; }
        public float Contempt { get; set; }
        public float Disgust { get; set; }
        public float Fear { get; set; }
        public float Happiness { get; set; }
        public float Neutral { get; set; }
        public float Sadness { get; set; }
        public float Surprise { get; set; }
    }

    public class Face
    {
        public Guid FaceId { get; set; }
        public FaceAttribute FaceAttributes { get; set; }
        public string MainEmotion { get; set; }
    }

    // Processes image for the emotions
    private async Task ProcessImage()
    {
        _faces = null;
        _faces = new List<Face>();

        // Builds the Url with query parameters
        HttpClient client = new HttpClient { BaseAddress = new Uri(_baseUrl + "/face/v1.0/detect?returnFaceAttributes=age,glasses,emotion,gender&ReturnFaceLandmarks=true") };

        HttpResponseMessage response = null;

        var payload = new DataPayload { Url = ImageUrl };

        var payloadString = new StringContent(System.Text.Json.JsonSerializer.Serialize(payload), Encoding.UTF8, MediaTypeNames.Application.Json);

        client.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", _config.ApiKey);

        response = await client.PostAsync(client.BaseAddress, payloadString);

        if (response.Content is object && response.Content.Headers.ContentType.MediaType == "application/json")
        {
            var content = await response.Content.ReadAsStringAsync();
            _tempFaces = JsonSerializer.Deserialize<Face[]>(content, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
            ProcessEmotions();
        }
    }

    // Aggregates the emotion values and identifies the most prominent emotion
    public void ProcessEmotions()
    {
       foreach (Face face in _faces)
       {
           var emotionValues = new Dictionary<string, float> {
              {"Anger", face.FaceAttributes.Emotion.Anger},
              {"Contempt", face.FaceAttributes.Emotion.Contempt},
              {"Disgust", face.FaceAttributes.Emotion.Disgust},
              {"Fear", face.FaceAttributes.Emotion.Fear},
              {"Happiness", face.FaceAttributes.Emotion.Happiness},
              {"Neutral", face.FaceAttributes.Emotion.Neutral},
              {"Sadness", face.FaceAttributes.Emotion.Sadness},
              {"Surprise", face.FaceAttributes.Emotion.Surprise}
            };

            float topValue = 0;
            string topValueName = "";

            foreach (var emotion in emotionValues)
            {
                  if (emotion.Value > topValue)
                  {
                    topValue = emotion.Value;
                    topValueName = emotion.Key;
                  }
            }

            Face ourFace = new Face { FaceId = face.FaceId, FaceAttributes = face.FaceAttributes, MainEmotion = topValueName };
            _faces.Add(ourFace);
       }
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
